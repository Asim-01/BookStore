{"ast":null,"code":"var __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n    r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n    d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = this && this.__metadata || function (k, v) {\n  if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\n// Decorators and Lifehooks\nimport { Component } from '@angular/core';\n// Forms\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\n// Router\nimport { Router, ActivatedRoute } from '@angular/router';\n// Services\nimport { BookService } from '../../../core/services/book.service';\n// Custom Validators\nimport { isUrlValidator } from '../../../core/directives/is-url.directive';\nimport { isIsbnValidator } from '../../../core/directives/is-isbn.directive';\nexport let BookEditComponent = class BookEditComponent {\n  constructor(router, route, bookService) {\n    this.router = router;\n    this.route = route;\n    this.bookService = bookService;\n  }\n  ngOnInit() {\n    this.initForm();\n    this.id = this.route.snapshot.paramMap.get('bookId');\n    this.bookService.getSingleBook(this.id).subscribe(res => {\n      this.editBookForm.patchValue({\n        ...res.data\n      });\n    });\n  }\n  initForm() {\n    this.editBookForm = new FormGroup({\n      'title': new FormControl('', [Validators.required]),\n      'author': new FormControl('', [Validators.required]),\n      'genre': new FormControl('', [Validators.required]),\n      'year': new FormControl('', [Validators.required]),\n      'description': new FormControl('', [Validators.required, Validators.minLength(10)]),\n      'cover': new FormControl('', [Validators.required, isUrlValidator]),\n      'isbn': new FormControl('', [Validators.required, isIsbnValidator]),\n      'pagesCount': new FormControl('', [Validators.required, Validators.min(0)]),\n      'price': new FormControl('', [Validators.required, Validators.min(0)])\n    });\n  }\n  onSubmit() {\n    this.bookService.editBook(this.id, this.editBookForm.value).subscribe(res => {\n      this.router.navigate([`/book/details/${res.data._id}`]);\n    });\n  }\n  get title() {\n    return this.editBookForm.get('title');\n  }\n  get author() {\n    return this.editBookForm.get('author');\n  }\n  get genre() {\n    return this.editBookForm.get('genre');\n  }\n  get year() {\n    return this.editBookForm.get('year');\n  }\n  get description() {\n    return this.editBookForm.get('description');\n  }\n  get cover() {\n    return this.editBookForm.get('cover');\n  }\n  get isbn() {\n    return this.editBookForm.get('isbn');\n  }\n  get pagesCount() {\n    return this.editBookForm.get('pagesCount');\n  }\n  get price() {\n    return this.editBookForm.get('price');\n  }\n};\nBookEditComponent = __decorate([Component({\n  selector: 'app-book-edit',\n  templateUrl: './book-edit.component.html',\n  styleUrls: ['./book-edit.component.css']\n}), __metadata(\"design:paramtypes\", [Router, ActivatedRoute, BookService])], BookEditComponent);","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}